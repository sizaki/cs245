import java.io.File;
import java.io.FileNotFoundException;
import java.util.ArrayList;
import java.util.Scanner;




public class SSN {
	public static void main(String[] args) throws FileNotFoundException {
		String inst = "ListType=ArrayList\nDirectory=C:\\Users\\perryjc1\\Downloads\\SSN States";
		String file = "C:\\Users\\perryjc1\\Downloads\\SSN States";
		// String file = "C:\\\\Users\\\\perryjc1\\\\Downloads\\State Example.txt";
		ArrayList<Person> list = new ArrayList<Person>();

		File direct = new File(file);
		String[] files = direct.list();

		Scanner stateReader = null;
		Scanner reader = null;
		String look = null;
		String state = null;
		String gender = null;
		String year = null;
		int age = 0;
		String name = null;

		for (int i = 0; i < files.length; i++) {
			System.out.println("Now loading: " + files[i]);
			if (files[i].endsWith(".TXT")) {
				stateReader = new Scanner(new File(file + "\\" + files[i]));
				while (stateReader.hasNextLine()) {
					look = stateReader.nextLine();
					// System.out.println(look);
					reader = new Scanner(look);
					reader.useDelimiter(",");
					state = reader.next();
					gender = reader.next();
					year = reader.next();
					age = 2021 - Integer.parseInt(year);
					name = reader.next();

					list.add(new Person(state, name, age, gender));
				}
			}
		}


		Scanner input = new Scanner(System.in);

		while (true) {
			System.out.print("Name of the person (or EXIT to quit): ");
			name = input.nextLine();
			if (name.equals("EXIT")) {
				break;
			}
			System.out.print("Gender (M/F): ");
			gender = input.nextLine();
			System.out.print("State of birth (two-letter state code): ");
			state = input.nextLine();
			boolean check = false;
			for (int i = 0; i < files.length; i++) {
				if(files[i].startsWith(state)) {
					check = true;
				}
			}
			if(!check) {
				System.out.println("There is no state matching: " + state);
				continue;
			}

			int total = 0;
			int count = 0;
			
			int[] years = new int[150];
			int max = 0;
			int mode = 0;
			
			age = 0;
			for (int i = 0; i < list.size(); i++) {
				if (!list.get(i).state.equals(state)) {
					continue;
				}
				if (!list.get(i).name.equals(name)) {
					continue;
				}
				if (!list.get(i).gender.equals(gender)) {
					continue;
				}
				
				age = list.get(i).age;
				total += age; 
				count++;
				
				years[age]++;
				if(years[age] > max) {
					max = years[age];
					mode = age;
				}
			}

			if(total != 0) {
				System.out.println("Using mean:");
				System.out.println(name + ", born in " + state + " is most likely around " + (total / count) + " years old.");
				
				System.out.println("Using mode:");
				System.out.println(name + ", born in " + state + " is most likely around " + mode + " years old.");
				
			} else {
				System.out.println("There is no " + name + " recorded in " + state);
			}
		}

	}

}









